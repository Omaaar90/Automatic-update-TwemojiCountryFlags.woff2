name: Check JoeBlakeB/ttf-twemoji-aur Releases and Build Font
on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC (2:00 AM CEST during summer)
  workflow_dispatch: # Allows manual triggering for testing
jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      # Checkout your repository
      - name: Checkout Repository
        uses: actions/checkout@v4
      # Install fonttools and curl
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y fonttools curl
      # Set up Node.js for npm
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Adjust to match your project's Node.js version
      # Install npm dependencies
      - name: Install npm Dependencies
        run: npm install
      # Download previous release tag (if exists)
      - name: Download Previous Release Tag
        id: download-artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: auto-build-font.yml
          name: ttf-twemoji-release-tag
          if_no_artifact_found: warn
        continue-on-error: true
      # Fetch the latest release tag from JoeBlakeB/ttf-twemoji-aur
      - name: Get Latest Release Tag
        id: get_release
        run: |
          LATEST_RELEASE=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT }}" \
            https://api.github.com/repos/JoeBlakeB/ttf-twemoji-aur/releases/latest | jq -r '.tag_name // "none"')
          echo "latest_release=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "Latest release: $LATEST_RELEASE"
      # Compare with previous release tag
      - name: Compare Releases
        id: compare_releases
        run: |
          PREVIOUS_RELEASE=$(cat ttf-twemoji-release-tag 2>/dev/null || echo "none")
          echo "Previous release: $PREVIOUS_RELEASE"
          if [ "${{ steps.get_release.outputs.latest_release }}" != "$PREVIOUS_RELEASE" ]; then
            echo "release_changed=true" >> $GITHUB_OUTPUT
            echo "Release changed: true"
          else
            echo "release_changed=false" >> $GITHUB_OUTPUT
            echo "Release changed: false"
          fi
      # Download the TTF file from the latest release
      - name: Download TTF File
        if: steps.compare_releases.outputs.release_changed == 'true'
        run: |
          # Get the latest release info
          RELEASE_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.PAT }}" \
            https://api.github.com/repos/JoeBlakeB/ttf-twemoji-aur/releases/latest)
          
          # Debug: Show available assets
          echo "Available assets:"
          echo "$RELEASE_INFO" | jq -r '.assets[]?.name // empty'
          
          # Extract the TTF asset URL - try multiple patterns to be safe
          TTF_ASSET_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[]? | select(.name | test("^Twemoji-.*\\.ttf$")) | .browser_download_url' | head -n1)
          
          # If the first pattern doesn't work, try a more general one
          if [ -z "$TTF_ASSET_URL" ] || [ "$TTF_ASSET_URL" = "null" ]; then
            echo "First pattern failed, trying general TTF pattern..."
            TTF_ASSET_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[]? | select(.name | endswith(".ttf")) | .browser_download_url' | head -n1)
          fi
          
          if [ -z "$TTF_ASSET_URL" ] || [ "$TTF_ASSET_URL" = "null" ]; then
            echo "Error: Could not find TTF asset in the latest release"
            exit 1
          fi
          
          echo "Downloading TTF from: $TTF_ASSET_URL"
          
          # Create build directory if it doesn't exist
          mkdir -p build
          
          # Download the TTF file to a known location
          curl --location "$TTF_ASSET_URL" --output build/twemoji-source.ttf
          
          # Verify the file was downloaded
          if [ ! -f build/twemoji-source.ttf ]; then
            echo "Error: Failed to download TTF file"
            exit 1
          fi
          
          echo "TTF file downloaded successfully ($(stat -c%s build/twemoji-source.ttf) bytes)"
      # Run font generation if release changed
      - name: Generate Font
        if: steps.compare_releases.outputs.release_changed == 'true'
        run: |
          npm run make-font
          ls -la dist/TwemojiCountryFlags.woff2
      # Deploy font to gh-pages
      - name: Deploy to GitHub Pages
        if: steps.compare_releases.outputs.release_changed == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          destination_dir: fonts
          commit_message: "Deploy TwemojiCountryFlags.woff2 from JoeBlakeB/ttf-twemoji-aur release ${{ steps.get_release.outputs.latest_release }}"
      # Store the new release tag
      - name: Store New Release Tag
        if: steps.compare_releases.outputs.release_changed == 'true'
        run: |
          echo "${{ steps.get_release.outputs.latest_release }}" > ttf-twemoji-release-tag
      # Upload the new release tag as an artifact
      - name: Upload Release Tag
        if: steps.compare_releases.outputs.release_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ttf-twemoji-release-tag
          path: ttf-twemoji-release-tag
